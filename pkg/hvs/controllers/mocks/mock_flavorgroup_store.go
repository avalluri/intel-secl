// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intel-secl/intel-secl/v3/pkg/hvs/domain (interfaces: FlavorGroupStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	hvs "github.com/intel-secl/intel-secl/v3/pkg/model/hvs"
	reflect "reflect"
)

// MockFlavorGroupStore is a mock of FlavorGroupStore interface
type MockFlavorGroupStore struct {
	ctrl     *gomock.Controller
	recorder *MockFlavorGroupStoreMockRecorder
}

// MockFlavorGroupStoreMockRecorder is the mock recorder for MockFlavorGroupStore
type MockFlavorGroupStoreMockRecorder struct {
	mock *MockFlavorGroupStore
}

// NewMockFlavorGroupStore creates a new mock instance
func NewMockFlavorGroupStore(ctrl *gomock.Controller) *MockFlavorGroupStore {
	mock := &MockFlavorGroupStore{ctrl: ctrl}
	mock.recorder = &MockFlavorGroupStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFlavorGroupStore) EXPECT() *MockFlavorGroupStoreMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockFlavorGroupStore) Create(arg0 *hvs.FlavorGroup) (*hvs.FlavorGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*hvs.FlavorGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockFlavorGroupStoreMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFlavorGroupStore)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockFlavorGroupStore) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockFlavorGroupStoreMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFlavorGroupStore)(nil).Delete), arg0)
}

// Retrieve mocks base method
func (m *MockFlavorGroupStore) Retrieve(arg0 string) (*hvs.FlavorGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", arg0)
	ret0, _ := ret[0].(*hvs.FlavorGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve
func (mr *MockFlavorGroupStoreMockRecorder) Retrieve(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockFlavorGroupStore)(nil).Retrieve), arg0)
}

// Search mocks base method
func (m *MockFlavorGroupStore) Search(arg0 *hvs.FlavorGroupFilterCriteria) (*hvs.FlavorgroupCollection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", arg0)
	ret0, _ := ret[0].(*hvs.FlavorgroupCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search
func (mr *MockFlavorGroupStoreMockRecorder) RetrieveAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockFlavorGroupStore)(nil).Search), arg0)
}
